<?xml version="1.0" encoding="utf-8"?>
<modification>
	<name>PavoThemer</name>
	<code>pavothemer</code>
	<version>1.0.0</version>
	<author>Pavotheme</author>
	<link>http://www.pavothemes.com</link>
    <file path="admin/controller/common/column_left.php">
        <operation>
            <search><![CDATA[// Catalog]]></search>
            <add position="before"><![CDATA[
                // pavothemer language file
                $this->load->language('extension/module/pavothemer');

                // PavoThemer Settings menu
                $settings = array();
                // view settings panel
                if ( $this->user->hasPermission( 'access', 'extension/module/pavothemer/edit' ) ) {
                    $settings[] = array(
                        'name'     => $this->language->get('menu_settings_text'),
                        'href'     => $this->url->link('extension/module/pavothemer/edit', 'user_token=' . $this->session->data['user_token'], true),
                        'children' => array()
                    );
                }

                // access customize
                //if ( $this->user->hasPermission( 'access', 'extension/module/pavothemer/customize' ) ) {
                //    $settings[] = array(
                //        'name'     => $this->language->get('menu_customize_text'),
                //        'href'     => $this->url->link('extension/module/pavothemer/customize', 'user_token=' . $this->session->data['user_token'], true),
                //        'children' => array()
                //    );
                //}

                // view settings panel
                if ( $this->user->hasPermission( 'access', 'extension/module/pavothemer/tools' ) || $this->user->hasPermission( 'access', 'extension/module/pavothemer/tools' ) ) {
                    $settings[] = array(
                        'name'     => $this->language->get('menu_tool_text'),
                        'href'     => $this->url->link('extension/module/pavothemer/tools', 'user_token=' . $this->session->data['user_token'], true),
                        'children' => array()
                    );
                }

                // theme management
                if ( $this->user->hasPermission( 'access', 'extension/module/pavothemer/management' ) || $this->user->hasPermission( 'access', 'extension/module/pavothemer/management' ) ) {
                    $settings[] = array(
                        'name'     => $this->language->get('menu_management_text'),
                        'href'     => $this->url->link('extension/module/pavothemer/management', 'user_token=' . $this->session->data['user_token'], true),
                        'children' => array()
                    );
                }

                // view homebuilder
                if ( $this->user->hasPermission( 'access', 'extension/module/pavobuilder' ) || $this->user->hasPermission( 'access', 'extension/module/pavobuilder' ) ) {
                    $settings[] = array(
                        'name'     => $this->language->get('menu_builder_text'),
                        'href'     => $this->url->link('extension/module/pavobuilder', 'user_token=' . $this->session->data['user_token'], true),
                        'children' => array()
                    );
                }

                if ( $settings ) {
                    $data['menus'][] = array(
                        'id'       => 'pavothemer',
                        'icon'     => 'fa fa-cog fw',
                        'name'     => $this->language->get( 'heading_title' ),
                        'href'     => '',
                        'children' => $settings
                    );
                }
                // End PavoThemer Settings menu
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/header.php">
        <operation>
            <search><![CDATA[$data['title'] = $this->document->getTitle();]]></search>
            <add position="before"><![CDATA[
        // theme
        $theme = $this->config->get( 'config_theme' );
        // skin
        $skin = $this->config->get( 'pavothemer_default_skin' );
        /**
         * style files
         *
         * stylesheet file
         * stylesheet-rtl file
         * skin file
         */
        $styles = array(
            'stylesheet',
            $this->language->get( 'direction' ) === 'rtl' ? 'stylesheet-rtl' : '',
            $skin ? 'skins/' . $skin : '',
            'customize'
        );

        foreach ( $styles as $style ) {
            if ( ! $style ) continue;
            $style = DIR_TEMPLATE . $theme . '/stylesheet/' . $style;
            $file = false;
            if ( file_exists( $style . '.min.css' ) ) {
                $file = $style . '.min.css';
            } else if ( file_exists( $style . '.css' ) ) {
                $file = $style . '.css';
            }
            if ( $file ) {
                $file = str_replace( DIR_APPLICATION, basename( DIR_APPLICATION ) . '/', $file );
                $this->document->addStyle( $file );
            }
        }

        /**
         * script files
         *
         * common script
         * customize script
         */
        $scripts = array(
            'common',
            'customize'
        );

        foreach ( $scripts as $script ) {
            $script = DIR_TEMPLATE . $theme . '/javascript/' . $script;
            $file = false;

            if ( file_exists( $script . '.min.js' ) ) {
                $file = $script . '.min.js';
            } else if ( file_exists( $script . '.js' ) ) {
                $file = $script . '.js';
            }

            if ( $file ) {
                $file = str_replace( DIR_APPLICATION, basename( DIR_APPLICATION ) . '/', $file );
                $this->document->addScript( $file );
            }
        }]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/header.php">
        <operation>
            <search><![CDATA[return $this->load->view('common/header', $data);]]></search>
            <add position="replace"><![CDATA[
        $data['body_class'] = $this->getBodyClass();
        // pavothemer header layout file
        $data['pavothemer_theme_width'] = $this->config->get( 'pavothemer_theme_width' );
        $data['pavothemer_layout']      = $this->config->get( 'pavothemer_layout' );
        $header = $this->config->get( 'pavothemer_header_layout' );

        $file = DIR_TEMPLATE . $theme . '/template/common/' . $header . '.twig';
        if ( $header && file_exists( $file ) ) {
            return $this->load->view('common/' . $header, $data);
        } else {
            return $this->load->view('common/header', $data);
        }

    }

    /**
     * Get body class
     */
    public function getBodyClass() {
        $route = ! empty( $this->request->get['route'] ) ? $this->request->get['route'] : 'common/home';
        $layout_id = $this->config->get('config_layout_id');

        $classes = array(
                implode( '-', explode( '/', $route ) )
            );

        // categories
        if ( $route === 'product/category' && ! empty( $this->request->get['path'] ) ) {
            $category_ids = explode( '_', $this->request->get['path'] );
            $category_id = ! empty( $category_ids ) ? end( $category_ids ) : 0;

            if ( $category_id ) {
                // load catalog category model
                $this->load->model( 'catalog/category' );
                $layout_id = $this->model_catalog_category->getCategoryLayoutId( $category_id );

                $classes[] = 'category';
                $classes[] = 'category-' . $category_id;
            }
        }

        // product details
        if ( $route === 'product/product' && ! empty( $this->request->get['product_id'] ) ) {
            // load model
            $this->load->model( 'catalog/product' );
            $layout_id = $this->model_catalog_product->getProductLayoutId( $this->request->get['product_id'] );

            $classes[] = 'product';
            $classes[] = 'product-' . $this->request->get['product_id'];
        }

        // information
        if ( $route === 'information/information' && ! empty( $this->request->get['information_id'] ) ) {
            // load model
            $this->load->model('catalog/information');
            $layout_id = $this->model_catalog_information->getInformationLayoutId($this->request->get['information_id']);
            $classes = 'information';
        }

        $classes[] = 'layout-' . $layout_id;

        return implode( ' ', $classes );
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/common/footer.php">
        <operation>
            <search><![CDATA[return $this->load->view('common/footer', $data);]]></search>
            <add position="replace"><![CDATA[
                // pavothemer footer layout file
                $footer = $this->config->get( 'pavothemer_footer_layout' );
                $data['enable_copyright'] = $this->config->get( 'pavothemer_enable_custom_copyright' );
                $data['powered'] = $this->config->get( 'pavothemer_copyright_text' );
                if ( ! $footer ) {
                    return $this->load->view('common/footer', $data);
                } else {
                    return $this->load->view('common/' . $footer, $data);
                }
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/product/product.php">
        <operation>
            <search><![CDATA[$this->response->setOutput($this->load->view('product/product', $data));]]></search>
            <add position="replace"><![CDATA[
                // pavothemer product layout file
                $layout = $this->config->get( 'pavothemer_product_layout' );
                if ( ! $layout ) {
                    $this->response->setOutput($this->load->view('product/product', $data));
                } else {
                    $this->response->setOutput($this->load->view('product/' . $layout, $data));
                }
            ]]></add>
        </operation>
    </file>
    <file path="catalog/controller/product/category.php">
        <operation>
            <search><![CDATA[$this->response->setOutput($this->load->view('product/category', $data));]]></search>
            <add position="replace"><![CDATA[
                // pavothemer category layout file
                $layout = $this->config->get( 'pavothemer_category_layout' );
                if ( ! $layout ) {
                    $this->response->setOutput($this->load->view('product/category', $data));
                } else {
                    $this->response->setOutput($this->load->view('product/' . $layout, $data));
                }
            ]]></add>
        </operation>
    </file>
</modification>